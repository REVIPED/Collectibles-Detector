import requests

# Set the base URL for the Roblox API
base_url = 'https://inventory.roblox.com/v1/users/'

# Set the asset type to "Hat" and the sort order to "Asc"
asset_type = 'Hat'
sort_order = 'Asc'

# Set the limit for the number of collectibles to retrieve
limit = 100

# Set the URL for the API request to retrieve a list of user IDs
url = 'https://inventory.roblox.com/v1/users'

# Make the API request
response = requests.get(url)

# Check the status code of the response
if response.status_code == 200:
    # If the request is successful, get the user data from the response
    user_data = response.json()

    # Get the list of user IDs from the user data
    user_ids = [user['id'] for user in user_data]

    # Loop through the user IDs
    for user_id in user_ids:
        # Construct the URL for the API request to retrieve collectibles data
        url = f'{base_url}{user_id}/assets/collectibles?assetType={asset_type}&sortOrder={sort_order}&limit={limit}'

        # Make the API request
        response = requests.get(url)

        # Check the status code of the response
        if response.status_code == 200:
            # If the request is successful, get the collectibles data from the response
            collectibles_data = response.json()

            # Get the player's name from the collectibles data
            player_name = collectibles_data['user']['username']

            # Get the list of collectibles from the collectibles data
            collectibles = collectibles_data['data']

            # Print the player's name
            print(f'Player: {player_name}')

            # Loop through the collectibles and print the name of each one
            for collectible in collectibles:
                print(f'Collectible: {collectible["name"]}')

        else:
            # If the request is not successful, print an error message
            print('An error occurred while retrieving collectibles data')

else:
    # If the request is not successful, print an error message
    print('An error occurred while retrieving user data')
